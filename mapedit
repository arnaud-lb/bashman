#! /bin/bash

function initialisation(){ #initialisation du terminal
save = stty -g			#sauvegarde de l'etat initial du terminal
tput clear			#clear de l'ecran
tput civis			#clignotement du curseur
stty -icanon -echo time 1 min 0 #mode sans echo, saisie automatique
map="map"
HAUT=$(echo -e "\033[A\n")      #affectation des valeurs des touches clavier aux variables
BAS=$(echo -e "\033[B\n")
GAUCHE=$(echo -e "\033[D\n")	
DROITE=$(echo -e "\033[C\n")

ESP=" "
DEL="d"
TRANSP="t"


#initialisation des variables utilisees dans l'ensemble du script
x=0
y=0
dx=0
dy=0
width=0
height=0
clic=1
xclic=0
yclic=0
curseur="#"
xmax=`tput cols`
ymax=`tput lines`
trace=0
maping=""
}

function rectangle(){ 			#Cette fonction trace des rectangle en fonction des positions extreme de clique
if [ $clic -eq 0 ]; then 		#clic est la variable permettant de savoir di l'utilisateur a clique avec la barre espace ou non

    for ((j=$y;i<=$yclic;j+=1)); do
	for ((i=$x;i<=$xclic;i+=1)); do
	    if [ $width -ne 0 ]; then
		tput cup $i $j
		#echo $curseur
		maping=${maping:0:$(($i*$width+$j))}"1"${maping:$(($i*$width+$j+1)):$(($width*($height-$i-1)+$width-$j-1))}

	    else
		if [ $i -eq $yclic ] || [ $i -eq $y ]; then
		    tput cup $i $j
		    echo $curseur
		fi
	    fi
	done
    tput cup $i $xclic
    echo $curseur
    tput cup $i $x
    echo $curseur
    done
    
    if [ $x -ne 0 ] && [ $y -ne 0 ]; then
	x=$(($x+1))
	y=$(($y+1))

	tput cup $y $x
	echo $curseur
	trace=0
    fi

else
    if [ $x -ne $xclic ] || [ $y -ne $yclic ]; then
	tput cup $y $x
	echo " "
	else
	tput cup $y $x
	echo $curseur
    fi

x=$(($x+$dx))
y=$(($y+$dy))




tput cup $y $x
echo $curseur
trace=1
fi
}

function delete(){ #fonction permettant la suppression d'un caractere
if [ $x -ne 0 ] && [ $x -ne $(($width-1)) ] && [ $y -ne 0 ] && [ $y -ne $(($height-1)) ]; then
    tput cup $y $x
    echo " "
    maping=${maping:0:$(($y*$width+$x))}"0"${maping:$(($y*$width+$x+1)):$(($width*($height-$y-1)+$width-$x-1))}
fi
}

function teleporteur(){ #fonction permettant l'ajout de teleporteur, juste sur les murs
    if [ $width -ne 0 ]; then
	if [ $(($x+$y)) -ne 0 ] && [ $(($x+$y*$width)) -ne $(($width-1)) ] && [ $(($y*$width+$x)) -ne $((($height-1)*$width)) ] && [ $(($x+$y*$width)) -ne $(($width*$height-1)) ]; then
	    if [ $y -eq 0 ] || [ $y -eq $(($height-1)) ] || [ $x -eq 0 ] || [ $x -eq $(($width-1)) ]; then

		tput cup $y $x
		tput setf 4
		echo "¤"
		tput setf 8
		maping=${maping:0:$(($y*$width+$x))}"2"${maping:$(($y*$width+$x+1)):$(($width*($height-$y-1)+$width-$x-1))}
	    fi
	fi
    fi
}

function boucle_jeu() { #fonction boucle

while true; do
    read
    case "$REPLY" in
    $HAUT) dx=0 ; dy=-1;;
    $BAS) dx=0 ; dy=1 ;;
    $GAUCHE) dx=-1 ; dy=0 ;;
    $DROITE) dx=1 ; dy=0 ;;
    $ESP) clic=$((1-$clic))

    if [ $clic -eq 1 ]; then
	xclic=$x
	yclic=$y
    fi;;
    
    $DEL) delete ;; 
    $TRANSP) teleporteur;;
    
    s)
    maping=$width"#"$height"#"${maping:0:$(($width*$height+2))}
    echo $maping > $map
    ;;

    q)  stty $save
    stty sane
    tput reset
    clear
    maping=$width"#"$height"#"${maping:0:$(($width*$height+2))}
    echo $maping > $map
    exit
    ;;
    
    * ) ;;
esac

if [ $(($x+$dx)) -lt $xmax ] && [ $(($x+$dx)) -ge 0 ] && [ $(($y+$dy)) -lt $(($ymax-1)) ] && [ $(($y+$dy)) -ge 0 ]; then


    if [ $width -eq 0 ] && [ $clic -eq 0 ] && [ $(($x*$y)) -eq 0 ]; then
	clic=1
    fi


    if [ $clic -eq 0 ] && [ $width -eq 0 ] && [ $height -eq 0 ] && [ $x -ne 0 ] && [ $y -ne 0 ]; then
	rectangle
	width=$x
	height=$y
	
	
	for ((i=0;i<=$(($width*$height-1));i+=1)); do
		
	    if [ $i -lt $width ] || [ $i -ge $(($width*$height-$width)) ]; then
		z=1
	    elif [ $(($i%$width)) -eq 0 ] || [ $((($i+1)%$width)) -eq 0 ]; then
		z=1
	    else
		z=0
	    fi
	    
	    maping=${maping:0:$i}$z

	done
	
	tput cup $y $x
        echo " "
	x=1
	y=1
        xmax=$width
	ymax=$(($height+1))
    fi

    if [ $clic -eq 0 ] && [ $width -ne 0 ] && [ $trace -eq 1 ]; then
	rectangle
	if [ $x -ge $width ] || [ $y -ge $height ]; then
	    tput cup $y $x
	    echo " "
	    x=1
	    y=1
	fi

    fi

    if [ $clic -eq 1 ]; then
	rectangle

    
	
	x=$(($x+$dx))
	y=$(($y+$dy))
	curseur="#"
	tput cup $y $x
	tput setf 2 
	echo $curseur
	tput setf 9 
    fi
fi

if [ $width -eq 0 ] && [ $x -ne 0 ] && [ $y -ne 0 ]; then

    tput cup 30 30
    echo -n  "Taille : $(($x+1)) * $(($y+1))"
    else
    tput cup 30 30
    echo -n "Taille : $width * $height"
fi
dx=0
dy=0



done


}

#programme principale

initialisation
clear
boucle_jeu

